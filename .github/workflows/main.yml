name: Build, sign, and push container image

on:
  push:
    branches:
      - main

jobs:
  build-sign-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure Git
        run: |
          git config --global user.email "vamsi.sapireddy@outlook.com"
          git config --global user.name "vamsi560"
        env:
          CI: true

      - name: azure login
        run: |
          az login --use-device-code

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build the image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/cosign:abc6 .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/cosign:abc6
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Validate YAML files with Spectral
        run: |
          docker run --rm -v "$(pwd):/mnt" stoplight/spectral lint /mnt/**/*.yaml --ruleset /mnt/spectral.yml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
           args: >
             -Dsonar.organization=vamsi560
             -Dsonar.projectKey=vamsi560_CosignimageSigning
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: cosign-installer
        uses: sigstore/cosign-installer@v2.2.0
        with:
          cosign-release: v2.2.0

      # Archive cosign.pub as an artifact
      - name: Archive cosign.pub
        uses: actions/upload-artifact@v2
        with:
          name: cosign-pub
          path: cosign.pub

      # Sign the image
      - name: Sign the image and get digest
        run: |
          SIGNED_IMAGE="cosign:abc6"
          cosign sign --key azurekms://keyvault-devsecops2.vault.azure.net/cosignkey --yes ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE
          cosign triangulate ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE
          cosign verify --key cosign.pub ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE | jq -r .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          
  UAT:
    runs-on: 'ubuntu-latest'
    environment: UAT
    needs: [build-sign-push]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2 

      - name: Configure Git
        run: |
          git config --global user.email "vamsi.sapireddy@outlook.com"
          git config --global user.name "vamsi560"
        env:
          CI: true
        
      - name: azure login
        run: |
          az login --use-device-code

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build the image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/cosign:abc6 .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/cosign:abc6
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Validate YAML files with Spectral
        run: |
          docker run --rm -v "$(pwd):/mnt" stoplight/spectral lint /mnt/**/*.yaml --ruleset /mnt/spectral.yml


      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
           args: >
             -Dsonar.organization=vamsi560
             -Dsonar.projectKey=vamsi560_CosignimageSigning
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: cosign-installer
        uses: sigstore/cosign-installer@v2.2.0
        with:
          cosign-release: v2.2.0

      # Archive cosign.pub as an artifact
      - name: Archive cosign.pub
        uses: actions/upload-artifact@v2
        with:
          name: cosign-pub
          path: cosign.pub

      # Sign the image
      - name: Sign the image and get digest
        run: |
          SIGNED_IMAGE="cosign:abc6"
          cosign sign --key cosign.key --yes ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE
          cosign triangulate ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE
          cosign verify --key cosign.pub ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE | jq -r .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      

  Dev:
    runs-on: 'ubuntu-latest'
    environment: Dev
    needs: [build-sign-push]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2 

      - name: Configure Git
        run: |
          git config --global user.email "vamsi.sapireddy@outlook.com"
          git config --global user.name "vamsi560"
        env:
          CI: true

      - name: azure login
        run: |
          az login --use-device-code

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build the image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/cosign:abc6 .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/cosign:abc6
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Validate YAML files with Spectral
        run: |
          docker run --rm -v "$(pwd):/mnt" stoplight/spectral lint /mnt/**/*.yaml --ruleset /mnt/spectral.yml


      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
           args: >
             -Dsonar.organization=vamsi560
             -Dsonar.projectKey=vamsi560_CosignimageSigning
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: cosign-installer
        uses: sigstore/cosign-installer@v2.2.0
        with:
          cosign-release: v2.2.0

      # Archive cosign.pub as an artifact
      - name: Archive cosign.pub
        uses: actions/upload-artifact@v3
        with:
          name: cosign-pub
          path: cosign.pub

      # Sign the image
      - name: Sign the image and get digest
        run: |
          SIGNED_IMAGE="cosign:abc6"
          cosign sign --key cosign.key --yes ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE
          cosign triangulate ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE
          cosign verify --key cosign.pub ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE | jq -r .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/$SIGNED_IMAGE
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}  

      - name: CodeScan Scanner
        # You may pin to the exact commit or the version.
        # uses: codescan-io/codescan-scanner-action@34bb1239ae63550b540bb82f8f5de370ecb34d99
        uses: codescan-io/codescan-scanner-action@1.4
        with:
          # CodeScan Organization Key
          organization: app.codescan.io/organizations/cosign
          # CodeScan Project Key
          projectKey: vamsi560-CosignimageSigning
          # CodeScan Login Key
          login: auth0|654344c26432acc5bb266e68
